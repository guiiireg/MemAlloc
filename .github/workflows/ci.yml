name: MemAlloc CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        config: [debug, release]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libcriterion-dev valgrind doxygen
    
    - name: Build MemAlloc (${{ matrix.config }})
      run: |
        make CONFIG=${{ matrix.config }} build
        make CONFIG=${{ matrix.config }} all-libs
        make examples
    
    - name: Run unit tests
      run: make test
    
    - name: Run basic example
      run: make run-basic
    
    - name: Run advanced example
      run: timeout 60 make run-advanced
    
    - name: Run integrity checks
      run: make run-showcase
    
    - name: Memory leak check with Valgrind
      if: matrix.config == 'debug'
      run: |
        make valgrind-test || true  # Allow to continue even if Valgrind finds issues
    
    - name: Generate coverage report
      if: matrix.config == 'debug'
      run: |
        make CONFIG=coverage test-coverage || true
    
    - name: Upload coverage to Codecov
      if: matrix.config == 'debug'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.info
        fail_ci_if_error: false

  documentation:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install documentation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz
    
    - name: Generate documentation
      run: make documentation
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/html

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Build release artifacts
      run: |
        make CONFIG=release all-libs
        make examples
        
    - name: Package release
      run: |
        mkdir -p release
        cp lib/* release/
        cp build/bin/* release/
        tar -czf MemAlloc-${{ github.ref_name }}.tar.gz release/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: MemAlloc-${{ github.ref_name }}.tar.gz
        body: |
          # MemAlloc ${{ github.ref_name }}
          
          Custom memory allocator implementation with advanced features.
          
          ## What's Included
          - Static library (libMemAlloc.a)
          - Shared library (libMemAlloc.so)
          - Example programs
          - Complete source code
          
          ## Quick Start
          ```bash
          tar -xzf MemAlloc-${{ github.ref_name }}.tar.gz
          cd MemAlloc
          ./install.sh
          ```
          
          See README.md for detailed documentation.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
